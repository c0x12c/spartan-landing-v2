name: Release Prod

on:
  push:
    tags:
      - '*'
    paths:
      - 'src/**/*'
      - 'yarn.lock'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_PROD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
  AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID_PROD }}
  NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.NEXT_PUBLIC_API_ENDPOINT_PROD }}
  NEXT_PUBLIC_AWS_S3_IMAGE_BUCKET_ENDPOINT: ${{ secrets.NEXT_PUBLIC_AWS_S3_IMAGE_BUCKET_ENDPOINT_PROD }}
  WEB_HOST: ${{ secrets.WEB_HOST_PROD }}
  PROJECT: ${{ secrets.PROJECT }}
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      # - name: Get latest commits
      #   run: |
      #     echo "GITHUB_LATEST_COMMITS=$(git log --pretty=format:"%h %ad%x09%an%x09%s" --date=short --first-parent origin/master | head -3)" >> $GITHUB_ENV

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'

      - name: Run install
        run: yarn install --frozen-lockfile

      - name: Build bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Sync to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: 'out'

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.AWS_CLOUDFRONT_ID }}
          PATHS: "/*"
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "channel": "${{ env.SLACK_CHANNEL }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":rocket: *${{ env.PROJECT }} - Deployed prod environment*"
                  }
                },{
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Created by:* ${{ github.event.pusher.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```${{ github.event.head_commit.message }}```"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View changes"
                      },
                      "style": "primary",
                      "url": "${{ github.event.head_commit.url }}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Site"
                      },
                      "style": "primary",
                      "url": "${{ env.WEB_HOST }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
